<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog.demo.mapper.CityMapper">
    <!--开启二级缓存-->
    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>
    <resultMap id="BaseResultMap" type="blog.demo.entity.City">
        <id column="c_id" jdbcType="INTEGER" property="cId"/>
        <result column="c_name" jdbcType="VARCHAR" property="cName"/>
    </resultMap>
    <sql id="Base_Column_List">
    c_id, c_name
  </sql>
    <!--查询所有-->
    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM city
    </select>
    <!--添加一个城市，返回自增主键-->
    <insert id="addCity" keyColumn="c_id" useGeneratedKeys="true" keyProperty="city.cId">
        INSERT INTO city(c_name) VALUES (#{city.cName,jdbcType=VARCHAR})
    </insert>
    <!--一对多查询结果集使用collection-->
    <resultMap id="cityMap" type="City">
        <id column="c_id" property="cId"/>
        <result column="c_name" property="cName"/>
        <collection property="person" ofType="Person">
            <id column="p_id" jdbcType="INTEGER" property="pId"/>
            <result column="p_name" jdbcType="VARCHAR" property="pName"/>
            <result column="p_sex" jdbcType="INTEGER" property="pSex"/>
            <result column="cp_id" jdbcType="INTEGER" property="cId"/>
        </collection>
    </resultMap>
    <!--一对多查询,一对多不使用二级缓存-->
    <select id="getOneToMany" resultMap="cityMap" useCache="false">
     SELECT
	c.c_id,
	c.c_name,
	p.p_id,
	p.p_name,
	p.p_sex,
	p.c_id AS cp_id
    FROM
	city AS c
	INNER JOIN person AS p ON c.c_id = p.c_id
    </select>

    <resultMap id="selectPersonMap" type="Person">
        <id column="p_id" jdbcType="INTEGER" property="pId"/>
        <result column="p_name" jdbcType="VARCHAR" property="pName"/>
        <result column="p_sex" jdbcType="INTEGER" property="pSex"/>
        <result column="c_id" jdbcType="INTEGER" property="cId"/>
    </resultMap>

<!--    &lt;!&ndash;一对多查询第二种方式,一对多不使用二级缓存&ndash;&gt;
    <select id="getOneToManyTwo" resultMap="getOneToManyTwoMap" useCache="false">
       SELECT c.c_id AS cp_id, c.c_name FROM city AS c
    </select>

    <resultMap id="getOneToManyTwoMap" type="City">
        <id column="cp_id" property="cId"/>
        <result column="c_name" property="cName"/>
        <collection property="person" ofType="Person" select="selectPerson" column="{c_id=cp_id}"/>
    </resultMap>
    &lt;!&ndash; 方法2 多表单独查询方式 &ndash;&gt;
    <select id="selectPerson" resultMap="selectPersonMap" useCache="false">
        SELECT p.p_id, p.p_name,p.p_sex, p.c_id FROM person AS p WHERE p.c_id=#{c_id}
    </select>-->

    <!--一对多查询第二种方式,一对多不使用二级缓存-->
    <select id="getOneToManyTwo" resultMap="getOneToManyTwoMap" useCache="false">
       SELECT c.c_id AS cp_id, c.c_name FROM city AS c
    </select>

    <resultMap id="getOneToManyTwoMap" type="City">
        <id column="cp_id" property="cId"/>
        <result column="c_name" property="cName"/>
        <collection property="person" ofType="Person" select="selectPerson" column="cp_id"/>
    </resultMap>
    <!-- 方法2 多表单独查询方式 -->
    <select id="selectPerson" resultMap="selectPersonMap" useCache="false">
        SELECT p.p_id, p.p_name,p.p_sex, p.c_id FROM person AS p WHERE p.c_id=#{chen_id}
    </select>

</mapper>